function y_CopyDARTELTemplate(InDir, OutDir, Options)
% function y_CopyDARTELTemplate(InDir, OutDir, Options)
% Copy DARTEL Template to each participant
%___________________________________________________________________________
% Written by YAN Chao-Gan 171220.
% Key Laboratory of Behavioral Science and Magnetic Resonance Imaging Research Center, Institute of Psychology, Chinese Academy of Sciences, Beijing, China
% ycg.yan@gmail.com

fprintf('Copying DARTEL template to each participant...\n');

Temp=strfind(Options,'--participant_label');
if ~isempty(Temp) %Subject list provided
    TempConfig=strfind(Options,'--config'); %Check if --config is given
    if isempty(TempConfig)
        TempStr=Options(Temp:end);
    else
        TempStr=Options(Temp:TempConfig-2);
    end
    Temp=strfind(TempStr,' ');
    SubID=[];
    for iSub=1:length(Temp)-1
        SubID{iSub,1}=['sub-',TempStr(Temp(iSub)+1:Temp(iSub+1)-1)];
    end
    SubID{length(Temp),1}=['sub-',TempStr(Temp(end)+1:end)];
else %Subject list not provided, process all the subjects
    Dir=dir([InDir,filesep,'sub*']);
    SubID=[];
    for i=1:length(Dir)
        SubID{i,1}=Dir(i).name;
    end
end

for i=2:length(SubID)
    copyfile([OutDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,'Template_6.*'])
    
end


DirImg=dir([AutoDataProcessParameter.DataProcessDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,'Template_6.*']);
            [pathstr,name,ext] = fileparts(DirImg(1).name); %YAN Chao-Gan, 151129. Check if it's .nii.gz
            if strcmpi(ext,'.gz')
                gunzip([AutoDataProcessParameter.DataProcessDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,DirImg(1).name]);
                delete([AutoDataProcessParameter.DataProcessDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,DirImg(1).name]);
                DirImg=dir([AutoDataProcessParameter.DataProcessDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,'Template_6.*']);
            end
            SPMJOB.matlabbatch{1,1}.spm.tools.dartel.mni_norm.template={[AutoDataProcessParameter.DataProcessDir,filesep,'T1ImgNewSegment',filesep,AutoDataProcessParameter.SubjectID{1},filesep,DirImg(1).name]};
            


%Save SubID file
SubID_File=[OutDir,filesep,'SubID.txt'];
fid = fopen(SubID_File,'w');
for iSub=1:length(SubID)
    fprintf(fid,'%s\n',SubID{iSub});
end
fclose(fid);

%delete previous TRInfo.tsv
delete([OutDir,filesep,'TRInfo.tsv']);

%Setup DPARSFA Cfg
MATPATH=fileparts(mfilename('fullpath'));
load([MATPATH,filesep,'Template_V4_CalculateInMNISpace_Warp_DARTEL_docker.mat'])
Cfg.SubjectID=SubID;
Cfg.DataProcessDir=OutDir;

Cfg.IsCalFC=0; %Functional Connectivity
Cfg.IsExtractROISignals=1; %Extract ROI Signals. Will calculate the FC and zFC between the ROIs as well
Cfg.CalFC.IsMultipleLabel=1; %1: There are multiple labels in the ROI mask file. Will extract each of them. (e.g., for aal.nii, extract all the time series for 116 regions); 0 (default): All the non-zero values will be used to define the only ROI
Cfg.CalFC.ROIDef = {[MATPATH,filesep,'aal.nii'];...
    [MATPATH,filesep,'HarvardOxford-cort-maxprob-thr25-2mm_YCG.nii'];...
    [MATPATH,filesep,'HarvardOxford-sub-maxprob-thr25-2mm_YCG.nii'];...
    [MATPATH,filesep,'CC200ROI_tcorr05_2level_all.nii'];...
    [MATPATH,filesep,'Zalesky_980_parcellated_compact.nii'];...
    [MATPATH,filesep,'Dosenbach_Science_160ROIs_Radius5_Mask.nii'];...
    [MATPATH,filesep,'BrainMask_05_91x109x91.img'];... %YAN Chao-Gan, 161201. Add global signal.
    [MATPATH,filesep,'Power_Neuron_264ROIs_Radius5_Mask.nii']}; %YAN Chao-Gan, 170104. Add Power 264.

Cfg.FunctionalSessionNumber=FunctionalSessionNumber;
if Cfg.FunctionalSessionNumber==0
    Cfg.FunctionalSessionNumber=1;
end

UseNoCoT1Image=1; %Prevent the dialog asking confirm use no co t1 images.

save('-v7',[OutDir,filesep,'DPARSFACfg.mat'],'Cfg','UseNoCoT1Image');

TempConfig=strfind(Options,'--config'); %Check if --config is given
if ~isempty(TempConfig)
    TempStr=Options(TempConfig:end);
    Temp=strfind(TempStr,' ');
    if length(Temp==1)
        FileName=TempStr(Temp(1)+1:end);
    else
        FileName=TempStr(Temp(1)+1:Temp(2)-1);
    end
    copyfile(FileName,[OutDir,filesep,'Config_DPARSF.m'])
    cd(OutDir)
    Config_DPARSF([OutDir,filesep,'DPARSFACfg.mat']);
end

% if exist([OutDir,filesep,'Config_DPARSF.m']) %Config DPARSF parameters use users setting
%     cd(OutDir)
%     Config_DPARSF([OutDir,filesep,'DPARSFACfg.mat']);
% end






